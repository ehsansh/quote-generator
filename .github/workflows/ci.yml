name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  say-hello:
    runs-on: ubuntu-latest
    steps:
      - name: Say Hello
        run: |
          echo "Starting CI/CD Pipeline for Quote Generator"
          echo "Running on branch: ${{ github.ref_name }}"

  lint-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm run lint

  lint-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm run lint

  test-frontend:
    runs-on: ubuntu-latest
    needs: [lint-frontend]
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm test

  test-backend:
    runs-on: ubuntu-latest
    needs: [lint-backend]
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm test

  build-frontend-image:
    runs-on: ubuntu-latest
    needs: [lint-frontend]
    steps:
      - uses: actions/checkout@v4
      - name: Build frontend Docker image
        run: docker build -t quote-generator-frontend ./frontend

  build-backend-image:
    runs-on: ubuntu-latest
    needs: [lint-backend]
    steps:
      - uses: actions/checkout@v4
      - name: Build backend Docker image
        run: docker build -t quote-generator-backend ./backend

  integration-test:
    runs-on: ubuntu-latest
    needs: [build-frontend-image, build-backend-image]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose CLI (v2)
        run: |
          sudo curl -L https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Run Integration Test
        run: |
          docker-compose -f docker-compose.yml up -d --build
          sleep 25
          for i in $(seq 1 10); do
            echo "Attempt $i: Curling http://localhost/api/quote"
            output=$(curl --fail --silent http://localhost/api/quote || true)
            if echo "$output" | grep -q "quote"; then
              echo "Integration test passed!"
              echo "$output"
              exit 0
            fi
            sleep 5
          done
          echo "Integration test failed!"
          exit 1

      - name: Tear down
        if: always()
        run: docker-compose down
